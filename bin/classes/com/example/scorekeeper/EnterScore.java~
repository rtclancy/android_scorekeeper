package com.example.scorekeeper;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;

public class EnterScore extends Activity {
    scorekeeper_data msd; //my scorekeeper data
	TextView my_view;
	CheckBox my_cb;
	Button my_button;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
	super.onCreate(savedInstanceState);
	setContentView(R.layout.activity_enter_score);
	msd=(scorekeeper_data) getIntent().getSerializableExtra("myobj");

	update_gui();

//	my_view=(TextView)findViewById(R.id.as_player1f);
//	my_view.setBackgroundColor(this.getResources().getColor(msd.color[msd.current_player]));
//
//	my_view=(TextView)findViewById(R.id.as_player1);
//	my_view.setBackgroundColor(this.getResources().getColor(msd.color[msd.current_player]));
//	my_view.setText(msd.players[msd.current_player]);
//
//	my_view=(TextView)findViewById(R.id.as_hole_idf);
//	my_view.setBackgroundColor(this.getResources().getColor(msd.color[msd.current_player]));
//
//	my_view=(TextView)findViewById(R.id.as_hole_id);
//	my_view.setBackgroundColor(this.getResources().getColor(msd.color[msd.current_player]));
//	my_view.setText(Integer.toString(msd.current_hole+1));
//
//	my_view=(TextView)findViewById(R.id.strokes);
//	my_view.setText(Integer.toString(msd.score[msd.current_player][msd.current_hole]));
//
//	my_view=(TextView)findViewById(R.id.aes_et_distance_in);
//	my_view.setText(Integer.toString(msd.distance_in[msd.current_player][msd.current_hole]));
//
//	my_view=(TextView)findViewById(R.id.aes_tv_driving_distance_data);
//	my_view.setText(Integer.toString(msd.course[scorekeeper_data.COURSE_BLUE][msd.current_hole] - msd.distance_in[msd.current_player][msd.current_hole]));
//
//	my_cb=(CheckBox)findViewById(R.id.cb_fwy_hit);
//	my_cb.setChecked((msd.fwy[msd.current_player][msd.current_hole] == 1) ? Boolean.TRUE : Boolean.FALSE);
//	my_cb=(CheckBox)findViewById(R.id.cb_gir);
//	my_cb.setChecked((msd.gir[msd.current_player][msd.current_hole] == 1) ? Boolean.TRUE : Boolean.FALSE);
//	my_button=(Button)findViewById(R.id.aeas_b_done);
//	my_button.setFocusable(Boolean.TRUE);
    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
	// Inflate the menu; this adds items to the action bar if it is present.
	getMenuInflater().inflate(R.menu.enter_score, menu);
	return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
	// Handle action bar item clicks here. The action bar will
	// automatically handle clicks on the Home/Up button, so long
	// as you specify a parent activity in AndroidManifest.xml.
	int id = item.getItemId();
	if (id == R.id.action_settings) {
	    return true;
	}
	return super.onOptionsItemSelected(item);
    }

    public void fwyHit(View view)
    {
	CheckBox my_cb;
	my_cb=(CheckBox)findViewById(R.id.aes_cb_fwy_hit);
	if (my_cb.isChecked())
	    {
		msd.fwy[msd.current_player][msd.current_hole]=1;
	    }
	else
	    {
		msd.fwy[msd.current_player][msd.current_hole]=0;
	    }
    }
    public void gir(View view)
    {
	CheckBox my_cb;
	my_cb=(CheckBox)findViewById(R.id.aes_cb_gir);
	if (my_cb.isChecked())
	    {
		msd.gir[msd.current_player][msd.current_hole]=1;
	    }
	else
	    {
		msd.gir[msd.current_player][msd.current_hole]=0;
	    }
    }
    private void update_gui()
    {
	my_view=(TextView)findViewById(R.id.aes_tv_player1a);
	my_view.setBackgroundColor(this.getResources().getColor(msd.color[msd.current_player]));

	my_view=(TextView)findViewById(R.id.aes_tv_player1b);
	my_view.setBackgroundColor(this.getResources().getColor(msd.color[msd.current_player]));
	my_view.setText(msd.players[msd.current_player]);

	my_view=(TextView)findViewById(R.id.aes_tv_hole_ida);
	my_view.setBackgroundColor(this.getResources().getColor(msd.color[msd.current_player]));

	my_view=(TextView)findViewById(R.id.aes_tv_hole_idb);
	my_view.setBackgroundColor(this.getResources().getColor(msd.color[msd.current_player]));
	my_view.setText(Integer.toString(msd.current_hole+1));

	my_view=(TextView)findViewById(R.id.aes_et_strokes);
	my_view.setText(Integer.toString(msd.score[msd.current_player][msd.current_hole]));

	my_view=(TextView)findViewById(R.id.aes_et_distance_in);
	my_view.setText(Integer.toString(msd.distance_in[msd.current_player][msd.current_hole]));

	
	my_view=(TextView)findViewById(R.id.aes_tv_driving_distanceb);
	if (msd.distance_in[msd.current_player][msd.current_hole] == 0)
	    {
		my_view.setText("NA");
	    }
	else
	    {
		my_view.setText(Integer.toString(msd.course[scorekeeper_data.COURSE_BLUE][msd.current_hole] - msd.distance_in[msd.current_player][msd.current_hole]));
	    }

	my_cb=(CheckBox)findViewById(R.id.aes_cb_fwy_hit);
	my_cb.setChecked((msd.fwy[msd.current_player][msd.current_hole] == 1) ? Boolean.TRUE : Boolean.FALSE);
	my_cb.setText("Fairway Hit? " + Integer.toString(msd.fwys_hit(msd.current_player))+" of 18");
	my_cb=(CheckBox)findViewById(R.id.aes_cb_gir);
	my_cb.setChecked((msd.gir[msd.current_player][msd.current_hole] == 1) ? Boolean.TRUE : Boolean.FALSE);
	my_cb.setText("Green In Regulation? " + Integer.toString(msd.girs(msd.current_player))+" of 18");
	my_button=(Button)findViewById(R.id.aes_b_done);
	my_button.setFocusable(Boolean.TRUE);
	my_button=(Button)findViewById(R.id.aes_b_current_hole);
	my_button.setText(Integer.toString(msd.current_hole+1));
    }
    public void Done(View view)
    {
	Save(view);
//	EditText my_view;
//	CharSequence text_cs;
//	my_view=(EditText)findViewById(R.id.strokes);
//	text_cs=my_view.getText();
//	msd.score[msd.current_player][msd.current_hole]=Integer.parseInt(text_cs.toString());
//	my_view=(EditText)findViewById(R.id.aes_et_distance_in);
//	text_cs=my_view.getText();
//	msd.distance_in[msd.current_player][msd.current_hole]=Integer.parseInt(text_cs.toString());
	//	my_view=(EditText)findViewById(R.id.editText1);
	//	text_cs=my_view.getText();
	//	msd.players[1]=text_cs.toString();
	//	my_view=(EditText)findViewById(R.id.editText2);
	//	text_cs=my_view.getText();
	//	msd.players[2]=text_cs.toString();
	//	my_view=(EditText)findViewById(R.id.editText3);
	//	text_cs=my_view.getText();
	//	msd.players[3]=text_cs.toString();
	//	
	Intent intent = new Intent(this, MainActivity.class);
	intent.putExtra("myobj",msd);
	setResult(RESULT_OK, intent);
	finish();
    }
    public void Save(View view)
    {
	Context context = getApplicationContext();
	Toast toast = Toast.makeText(context, "Save", Toast.LENGTH_SHORT);
	toast.show();
	EditText my_view;
	CharSequence text_cs;
	my_view=(EditText)findViewById(R.id.aes_et_strokes);
	text_cs=my_view.getText();
	msd.score[msd.current_player][msd.current_hole]=Msd_common_methods.catch_parseInt(text_cs.toString());
	my_view=(EditText)findViewById(R.id.aes_et_distance_in);
	text_cs=my_view.getText();
	msd.distance_in[msd.current_player][msd.current_hole]=Msd_common_methods.catch_parseInt(text_cs.toString());
	update_gui();
    }
    public void selectAll(View view)
    {
    	EditText my_et;
    	my_et=(EditText)findViewById(R.id.aes_et_strokes);
    	my_et.selectAll();
    }

   public void incr_current_hole(View view)
    {
   	if (msd.current_hole<17)
   		msd.current_hole++;
	update_gui();
    }
    public void decr_current_hole(View view)
    {
      	if (msd.current_hole>0)
      		 	msd.current_hole--;
	update_gui();
    }
}
